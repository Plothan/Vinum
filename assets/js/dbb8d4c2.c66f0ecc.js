"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1801],{38015:e=>{e.exports=JSON.parse('{"functions":[{"name":"get","desc":"Returns the current value.\\n\\n```lua\\nlocal root = Hold(100, Vinum.AlwaysTrue)\\nlocal mirrorObject = Mirror(root, {\\n\\t[100] = Hold(\\"I am level 100\\", Vinum.AlwaysTrue),\\n\\t[200] = Hold(\\"I am level 200\\", Vinum.AlwaysTrue),\\n\\t[\\"default\\"] = Hold(\\"My level isn\'t listed here\\", function() \\n\\t\\treturn false \\n\\tend)\\n})\\n\\nprint(mirrorObject:get()) -- \\"I am level 100\\"\\nroot:set(200)\\nprint(mirrorObject:get()) -- \\"I am level 200\\"\\n```\\n\\n:::danger\\nOmitting the \\"default\\" key can cause errors, since if Mirror doesn\'t find an object that its case key isn\'t\\nequal to the new value of inputState, it will default to `default`- expecting it to exist.\\n:::","params":[],"returns":[{"desc":"The cached value","lua_type":"any"}],"function_type":"method","source":{"line":83,"path":"src/Mirror.luau"}}],"properties":[],"types":[],"name":"Mirror","desc":"```lua\\nfunction Mirror<T, U>(\\n\\tinputState: { _value: T, [any]: any }, -- The object that Mirror will base off objects\\n\\tcases: { [T | \\"default\\"]: { _value: U, [any]: any } } -- A map of objects being linked to a specific value.\\n)\\n```\\n\\nConstructs a Mirror object that will mirror a specific object\'s value based on the given state object.","source":{"line":16,"path":"src/Mirror.luau"}}')}}]);