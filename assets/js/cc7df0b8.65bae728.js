"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2594],{51088:e=>{e.exports=JSON.parse('{"functions":[{"name":"get","desc":"Returns the current saved value in the Record\\n\\n:::caution\\nIf the Record isn\'t synced, the value that will be returned by this method might not\\nbe equal to the recorded object\'s current value.\\n:::\\n\\n```lua\\nlocal holdState = Hold(100, Vinum.AlwaysTrue)\\nlocal RecordState = Record(holdState, true)\\n\\nholdState:set(40)\\nprint(holdState:get() == RecordState:get()) -- true\\n```","params":[],"returns":[{"desc":"The value in the cache","lua_type":"any"}],"function_type":"method","source":{"line":52,"path":"src/Record.luau"}},{"name":"desync","desc":"Desyncs the Record object, which means any future updates will not be applied until `:sync` is called.\\n\\n```lua\\nlocal holdState = Hold(100, Vinum.AlwaysTrue)\\nlocal RecordState = Record(holdState, true)\\n\\nRecordState:desync()\\nholdState:set(40)\\nprint(holdState:get() == RecordState:get()) -- false\\n```","params":[],"returns":[],"function_type":"method","source":{"line":69,"path":"src/Record.luau"}},{"name":"sync","desc":"Syncs the Record object, which means the current value is synced to the Recorded object, and an update will be performed, plus, all \\nfuture updates will be listened to from now on.","params":[],"returns":[],"function_type":"method","source":{"line":87,"path":"src/Record.luau"}}],"properties":[],"types":[],"name":"Record","desc":"```lua\\nfunction Record(state: anyState, isInitiallySynced: boolean)\\n```\\n\\nConstructs a record which acts as an actual copy of `state`, unlike Reflect. ","source":{"line":12,"path":"src/Record.luau"}}')}}]);