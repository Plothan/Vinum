"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2783],{20888:e=>{e.exports=JSON.parse('{"functions":[{"name":"get","desc":"Returns the current value.\\n\\n```lua\\nlocal Root = Hold(100, Vinum.AlwaysTrue)\\nlocal Dependency = Hold(200, Vinum.AlwaysTrue)\\nlocal MatchState = Match(Root, {\\n\\t[100] = function(useState, useKeyState)\\n\\t\\treturn string.format(\\"My level is %s\\", useState(Dependency))\\n\\tend,\\n\\t[\\"default\\"] = function(_, _)\\n\\t\\treturn \\"not found\\"\\n\\tend\\n}, Vinum.AlwaysTrue)\\n\\n\\nprint(MatchState:get()) -- My level is 200\\nRoot:set(4)\\nprint(MatchState:get()) -- not found\\n```","params":[],"returns":[{"desc":"The cached value","lua_type":"any"}],"function_type":"method","source":{"line":62,"path":"src/Match.luau"}}],"properties":[],"types":[],"name":"Match","desc":"```lua\\nfunction(\\n\\tinputState, -- The object that Mirror will base off objects\\n\\tcases: { [any]: (useState, useKeyState) -> () }, -- A map of objects being linked to a specific value.\\n\\tupdateProcessor: (oldValue: any, newValue: any) -> (boolean) -- a function that Match uses to determine whether to let updates pass or not\\n)\\n```\\nConstructs a Match object, which is used for mirroring certain computations based on an object\'s value.","source":{"line":18,"path":"src/Match.luau"}}')}}]);