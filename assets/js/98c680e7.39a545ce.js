"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1307],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},88350:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const o={sidebar_position:2},i="Mirroring State",l={unversionedId:"Intermediate/Mirroring State",id:"Intermediate/Mirroring State",title:"Mirroring State",description:"Sometimes, we want to directly return state object's value in all cases, and while Matches are a decent tool for that, Vinum offers a more specialized tool for that, which is Mirror.",source:"@site/docs/Intermediate/Mirroring State.md",sourceDirName:"Intermediate",slug:"/Intermediate/Mirroring State",permalink:"/Vinum/docs/Intermediate/Mirroring State",draft:!1,editUrl:"https://github.com/Plothan/Vinum/edit/master/docs/Intermediate/Mirroring State.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Matching State",permalink:"/Vinum/docs/Intermediate/Matching State"},next:{title:"Recording State",permalink:"/Vinum/docs/Intermediate/Recording State"}},s={},c=[{value:"Usage",id:"usage",level:2},{value:"Why not a Match",id:"why-not-a-match",level:2}],u={toc:c};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"mirroring-state"},"Mirroring State"),(0,a.kt)("p",null,"Sometimes, we want to directly return state object's value in all cases, and while Matches are a decent tool for that, Vinum offers a more specialized tool for that, which is ",(0,a.kt)("inlineCode",{parentName:"p"},"Mirror"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local root = Hold(100, Vinum.AlwaysTrue)\nlocal Mirrored = Mirror(root, {\n    [100] = Hold("Fighter", Vinum.AlwaysTrue),\n    [200] = Hold("Lord", Vinum.AlwaysTrue),\n    ["default"] = Hold("Solider", Vinum.AlwaysTrue)\n})\n')),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"In order to use Mirrors, we first have to import its constructor:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local Mirror = Vinum.Mirror\n")),(0,a.kt)("p",null,"And now to create a Mirror object, we pass the constructor an input state, and a list of cases:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local root = Hold(100, Vinum.AlwaysTrue)\nlocal Mirrored = Mirror(root, {\n    [100] = Hold("Fighter", Vinum.AlwaysTrue),\n    [200] = Hold("Lord", Vinum.AlwaysTrue),\n    ["default"] = Hold("Solider", Vinum.AlwaysTrue)\n})\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Mirrors don't accept Processors because they are expected to be always mirroring a state object's value.")),(0,a.kt)("p",null,"And now, to read from it, we use its ",(0,a.kt)("inlineCode",{parentName:"p"},"get")," method:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'print(Mirrored:get()) -- "Fighter"\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"why-not-a-match"},"Why not a Match"),(0,a.kt)("p",null,"Sometimes, you would often use Matches as a way to return certain state object's value depending on another input state's value, something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local Matched = Match(root, {\n    [100] = function(useState)\n        return useState(x)\n    end,\n    ["default"] = function(useState)\n        return useState(b)\n    end\n}, Vinum.AlwaysTrue)\n')),(0,a.kt)("p",null,"However, there is a lot of boilerplate code, most notably the functions and the retuns, so, as a fix, Mirrors directly accept state objects instead- a mirror-based implementation can look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local mirrored = Mirror(root, {\n    [100] = x,\n    ["default"] = b\n}\n')))}d.isMDXComponent=!0}}]);