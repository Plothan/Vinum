"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4869],{98859:e=>{e.exports=JSON.parse('{"functions":[{"name":"get","desc":"Returns the current value that is stored in Reflect\'s Reflected object. Keep in mind that the returned value is the same\\nas the reflected\'s value.\\n\\n```lua\\nlocal holdState = Hold({23}, Vinum.AlwaysTrue)\\nlocal reflectState = Reflect(holdState)\\n\\nprint(holdState:get() == reflectState:get()) -- true\\n```","params":[],"returns":[{"desc":"The value that `state` has.","lua_type":"any"}],"function_type":"method","source":{"line":37,"path":"src/Reflect.luau"}}],"properties":[],"types":[],"name":"Reflect","desc":"```lua\\nfunction Reflect(state: anyState)\\n```\\n\\nConstructs a Reflect object, which is used to created a mirrored version of the given state object. Useful for creating \\nimmutable copies of a state object without any performance loses.","source":{"line":13,"path":"src/Reflect.luau"}}')}}]);